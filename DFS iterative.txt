vi adj[10];
int visited[10];
stack <int> s;
int nodes,edges;

void dfs(int s1)
{

    s.push(s1);
    visited[s1] = true;
    while( !s.empty() )
    {

        int v = s.top();
        s.pop();

        cout << v <<" ";

        int i;
        for(i=0;i<adj[v].size();++i)
        {
            if( visited[ adj[v][i] ] == false )
            {
                s.push( adj[v][i] );
                visited[ adj[v][i] ] = true ;
            }

        }
}

}

void initialize()
{
    int i;
    for(i=0;i<10;++i)
    {
        visited[i] = false;
    }
}
int main()
{
   int cnt=0;

   cin >> nodes >> edges;

   int i;
   for(i=0;i<edges;++i)
   {
       int x,y;
       cin >> x >> y;
       adj[x].pb(y);
       adj[y].pb(x);
   }

   initialize();
   cout << "DFS traversal : ";
   for(i=1;i<=nodes;++i)
   {
       if(visited[i] == false)
       {
            dfs(i);
            cnt++;
       }
    }
   cout << "Connected Components : "<<cnt;


}
